#!/bin/bash
set -e

. ../common

# Initialize the keys
pacman-key --init
pacman-key --populate archlinux

# Resync the database
pacman -Sy --noconfirm
# Update gpg keys before we install anything else.
pacman -S --noconfirm archlinux-keyring
# Now update everything.
pacman -Syu --noconfirm

# Let's update the mirrors.
install_packages curl sed
curl "https://www.archlinux.org/mirrorlist/?country=DE&protocol=http&protocol=https&ip_version=4&use_mirror_status=on" \
  | sed -e "s/#Server/Server/g" | sed -E 's/^(Server.*selfnet.de.*)/#\1/' > /etc/pacman.d/mirrorlist

# Run base install, with dev tools. The "bootstrap" fs doesn't contain everything, just what you need to bootstrap.
install_packages base base-devel

# makepkg don't allow you to run as root, because it could damage your system.
# This is correct, but we don't modify existing systems, we build new ones.
# The root stuff is more of a hindrance than a benefit when using darch.
install_packages patch
curl https://gist.githubusercontent.com/pauldotknopf/ff8e986225ab2f264acea1a5bb0c6c5a/raw/66e39c98b1a87cb40abfd489dba53bb5a8625186/makepkg.patch | patch /usr/bin/makepkg

# Now that we can run makepkg with root, let's our aur helper
install_aur_helper

# Install Darch
install_aur_packages darch
# We don't need grub as a bootloader, but we use
# their helper scripts in Darch to generate menu entries.
install_packages grub
# Enable containerd, which was brought in as a dependency.
systemctl enable containerd
# I store containerd on /var/lib/darch/containerd, because /var/lib/darch
# is an external partition. This way, images are persisted across boots.
mkdir -p /etc/containerd
echo "root = \"/var/lib/darch/containerd\"" > /etc/containerd/config.toml

# Enable systemd networking.
cp wired.network /etc/systemd/network/
systemctl enable systemd-networkd
systemctl enable systemd-resolved
